// 1. Написать скрипт, предлогающий пользователю ввести две строки через запятую. Вывести сообщение true, если вторая строка содержится в первый, в противном случае false, регистр при проверке не учитывать.
// 2. Пользователь вводит строку, затем число (кол-во символов). Функция усекает строку до кол-ва символов и добавляет многоточие.
// 4. Написать функцию, преобразующее строку с датой и временем формата '12/02/2021 12-00' в строку формата 12.02.2021 12:00, используя регулярные выражения
// 5. Написать функцию, валидирующую ФИО из кирилличиских символов (считать, что отчество может оканчиваться только на "вна" или "вич" или может отсутствовать)
// 5. На вход дана строка в PamalCase, преобразовать строку в snake_case
// 6. На вход даётся многострочная строка, найти и вернуть через alert все html комментарии
// 7. На вход дана строка, вернуть через alert все числа (десятичные разделяются сиволом ".")
// 8. Валидация введённого значения. Вводится идентификатор документа. Идентификатор должен состоять из четырёх частей по четыре символа,разделённых или не разделённых знаком "-". Допускаются только символы латинского алфавита и числа. Вывести через alert "ведётся поиск", при соответствии введённого значения, или "неверный илентификатор", при несоответствии. При несоответствии снова вывести форму для ввода строки.

//1
//Написать скрипт, предлогающий пользователю ввести две строки через запятую. Вывести сообщение true, если вторая строка содержится в первый, в противном случае false, регистр при проверке не учитывать.

// let firstMessage = prompt('Введите две строки через запятую')
// const arr = firstMessage.trim().split(',');

// if (arr[0].includes(arr[1].trim())) {
//   alert('true')
// } else {
//   alert('false')
// }

//2
// Пользователь вводит строку, затем число (кол-во символов). Функция усекает строку до кол-ва символов и добавляет многоточие.
// let firstMessage = prompt('Введите строку с числом')
// const regexp = /\d/g;
// const digitArr = firstMessage.match(regexp)
// alert(firstMessage.replace(regexp, '.'))

//3
// Написать функцию, преобразующее строку с датой и временем формата '12/02/2021 12-00' в строку формата 12.02.2021 12:00, используя регулярные выражения
// ^\d{2}\/\d{2}\/\d{4} \d{2}\-\d{2}$
// const regexp = /\//g;
// const regexp2 = /\-/g
// const str = '12/02/2021 12-00'


// const checkDate = (date) => {
//   let firstIter = date.replace(regexp, '.');
//   secondIter = firstIter.replace(regexp2, ':');
//   return secondIter
  
// }

// console.log(checkDate(str));

// ПЕРЕСМОТРЕТЬ УПРОСТИТЬ РЕШЕНИЕ!

// //4 Написать функцию, валидирующую ФИО из кирилличиских символов (считать, что отчество может оканчиваться только на "вна" или "вич" или может отсутствовать)
// const regexp = /^[а-яА-я]+(вич|вна)+ [а-яА-я]+( [а-яА-я]*)?$/

// const validator = (str) => {
//   return regexp.test(str)
// }

// console.log(validator('Иванович Иван Иванович'));

//5
// На вход дана строка в PamalCase, преобразовать строку в snake_case
// const stringPamCase = 'PamelCase';

// const validator = (str) => {
//   return str.replace(/(?<=[a-z])(?=[A-Z])/, '_').toLowerCase()

// }

// console.log(validator(stringPamCase));



//6. На вход даётся многострочная строка, найти и вернуть через alert все html комментарии
// const regexp = /(?:<).*?(?:>)/gm
// const stringPamCase = `<div class="container">
// <header class="header">
//     <div class="header__top">
//       <div class="header__title"> asdasdasd`;
      

// alert(stringPamCase.match(regexp))

// 7. На вход дана строка, вернуть через alert все числа (десятичные разделяются сиволом ".")

// const input = 'ada45456dasdad4.4546dsad446.456';
// [...input.matchAll( /\d+\.?(\d+)?/gm)].forEach(([num]) => alert(num))



// 8. Валидация введённого значения. Вводится идентификатор документа. Идентификатор должен состоять из четырёх частей по четыре символа,разделённых или не разделённых знаком "-". Допускаются только символы латинского алфавита и числа. Вывести через alert "ведётся поиск", при соответствии введённого значения, или "неверный илентификатор", при несоответствии. При несоответствии снова вывести форму для ввода строки.

const input = prompt("Ввeдите идентификатор документа");
const regexp = /^[a-zA-Z\d]{4}-?[a-zA-Z\d]{4}-?[a-zA-Z\d]{4}-?[a-zA-Z\d]{4}$/gm;     

if(input.match(regexp)) {
  alert ('Ведется поиск')
} else {
  prompt("Ввeдите идентификатор документа")
}
